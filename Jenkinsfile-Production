pipeline {
    agent {
        dockerfile {
            filename 'docker/dockerfile-java'
            additionalBuildArgs '--build-arg JENKINS_USER_ID=`id -u jenkins` --build-arg JENKINS_GROUP_ID=`id -g jenkins`'
        }
    }

    environment {
        DB_URL = "jdbc:postgresql://postgres-prod.co90ybcr8iim.eu-west-1.rds.amazonaws.com:5432/beacon"
        DB_USERNAME = credentials('beacon-api-db-username')
        DB_PASSWORD = credentials('beacon-api-db-password')
        DB_DIALECT = "org.hibernate.dialect.PostgreSQLDialect"
        JWT_SECRET = credentials('beacon-api-jwt-secret')
        UPLOAD_DIR = "/data/beacon-api"
        CORS_ORIGINS = "https://admin.beacon.bz.it"
        KONTAKT_IO_API_KEY = credentials('beacon-api-kontakt-io-api-key')
        INFO_TITLE = ""
        INFO_DESCRIPTION = ""
        INFO_VERSION = ""
        INFO_TERMS_OF_SERVICE_URL = ""
        INFO_CONTACT_NAME = ""
        INFO_CONTACT_URL = ""
        INFO_CONTACT_EMAIL = ""
        INFO_LICENSE = ""
        INFO_LICENSE_URL = ""
    }

    stages { 
        stage('Configure') {
            steps {
                sh 'cp src/main/resources/application.properties.dist src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(spring.datasource.url\\s*=\\).*\\$%\\1${DB_URL}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(spring.datasource.username\\s*=\\).*\\$%\\1${DB_USERNAME}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(spring.datasource.password\\s*=\\).*\\$%\\1${DB_PASSWORD}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(spring.jpa.properties.hibernate.dialect\\s*=\\).*\\$%\\1${DB_DIALECT}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(security.jwt.token.secret\\s*=\\).*\\$%\\1${JWT_SECRET}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(file.upload-dir\\s*=\\).*\\$%\\1${UPLOAD_DIR}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(it.bz.beacon.allowedOrigins\\s*=\\).*\\$%\\1${CORS_ORIGINS}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(kontakt.io.apiKey\\s*=\\).*\\$%\\1${KONTAKT_IO_API_KEY}%" src/main/resources/application.properties'

                sh 'sed -i -e "s%\\(api.info.title\\s*=\\).*\\$%\\1${INFO_TITLE}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.description\\s*=\\).*\\$%\\1${INFO_DESCRIPTION}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.version\\s*=\\).*\\$%\\1${INFO_VERSION}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.termsOfServiceUrl\\s*=\\).*\\$%\\1${INFO_TERMS_OF_SERVICE_URL}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.contactName\\s*=\\).*\\$%\\1${INFO_CONTACT_NAME}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.contactUrl\\s*=\\).*\\$%\\1${INFO_CONTACT_URL}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.contactEmail\\s*=\\).*\\$%\\1${INFO_CONTACT_EMAIL}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.license\\s*=\\).*\\$%\\1${INFO_LICENSE}%" src/main/resources/application.properties'
                sh 'sed -i -e "s%\\(api.info.licenseUrl\\s*=\\).*\\$%\\1${INFO_LICENSE_URL}%" src/main/resources/application.properties'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn -B -U clean test verify'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn -B -U clean package'
            }
        }
        stage('Archive') {
            steps {
                archiveArtifacts artifacts: 'target/beacon-api.war', onlyIfSuccessful: true
            }
        }
    }
}
